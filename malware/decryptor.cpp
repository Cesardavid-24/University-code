//intentando descifrar el archivo que habia cifrado!! se se puede 
#include <iostream>
#include <fstream>
#include <string>
#include <map>

using namespace std;

int main() {
    // 1. Leer el archivo cifrado
    string file_path = "archivo_cifrado.txt";
    ifstream file_in(file_path);
    string encrypted_content((istreambuf_iterator<char>(file_in)), (istreambuf_iterator<char>()));
    file_in.close();

    // 2. Definir la clave para el descifrado
    map<char, char> key = {
        {'z', 'a'},
        {'y', 'b'},
        {'x', 'c'},
        {'w', 'd'},
        {'v', 'e'},
        {'u', 'f'},
        {'t', 'g'},
        {'s', 'h'},
        {'r', 'i'},
        {'q', 'j'},
        {'p', 'k'},
        {'o', 'l'},
        {'n', 'm'},
        {'m', 'n'},
        {'l', 'o'},
        {'k', 'p'},
        {'j', 'q'},
        {'i', 'r'},
        {'h', 's'},
        {'g', 't'},
        {'f', 'u'},
        {'e', 'v'},
        {'d', 'w'},
        {'c', 'x'},
        {'b', 'y'},
        {'a', 'z'}
    };

    // 3. Recorrer cada letra del archivo cifrado y reemplazarla por la letra correspondiente en la clave
    string decrypted_content = "";
    for (char c : encrypted_content) {
        if (key.find(c) != key.end()) {
            decrypted_content += key[c];
        } else {
            decrypted_content += c;
        }
    }

    // 4. Guardar el archivo descifrado
    string decrypted_file_path = "archivo_descifrado.txt";
    ofstream file_out(decrypted_file_path);
    file_out << decrypted_content;
    file_out.close();

    cout << "El archivo ha sido descifrado exitosamente y se ha guardado en " << decrypted_file_path << endl;

    EXIT_SUCCESS;
}
